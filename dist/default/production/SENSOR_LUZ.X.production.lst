

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Oct 10 22:56:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007F40                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _keypad
    59  007F40  37                 	db	55
    60  007F41  38                 	db	56
    61  007F42  39                 	db	57
    62  007F43  34                 	db	52
    63  007F44  35                 	db	53
    64  007F45  36                 	db	54
    65  007F46  31                 	db	49
    66  007F47  32                 	db	50
    67  007F48  33                 	db	51
    68  007F49  2A                 	db	42
    69  007F4A  30                 	db	48
    70  007F4B  23                 	db	35
    71                           
    72                           	psect	nvCOMRAM
    73  000010                     __pnvCOMRAM:
    74                           	callstack 0
    75  000010                     _value_adc:
    76                           	callstack 0
    77  000010                     	ds	2
    78  0000                     _ADRESH	set	4036
    79  0000                     _ADCON2bits	set	4032
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _ADCON1bits	set	4033
    82  0000                     _PORTC	set	3970
    83  0000                     _LATC	set	3979
    84  0000                     _TRISC	set	3988
    85  0000                     _OSCCON	set	4051
    86  0000                     _LATB0	set	31824
    87  0000                     _RB7	set	31759
    88  0000                     _TRISB0	set	31896
    89  0000                     _TRISB7	set	31903
    90  0000                     _RBPU	set	32655
    91                           
    92                           ; #config settings
    93                           
    94                           	psect	cinit
    95  007F86                     __pcinit:
    96                           	callstack 0
    97  007F86                     start_initialization:
    98                           	callstack 0
    99  007F86                     __initialization:
   100                           	callstack 0
   101                           
   102                           ; Initialize objects allocated to COMRAM (12 bytes)
   103                           ; load TBLPTR registers with __pidataCOMRAM
   104  007F86  0E40               	movlw	low __pidataCOMRAM
   105  007F88  6EF6               	movwf	tblptrl,c
   106  007F8A  0E7F               	movlw	high __pidataCOMRAM
   107  007F8C  6EF7               	movwf	tblptrh,c
   108  007F8E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   109  007F90  6EF8               	movwf	tblptru,c
   110  007F92  EE00  F001         	lfsr	0,__pdataCOMRAM
   111  007F96  EE10 F00C          	lfsr	1,12
   112  007F9A                     copy_data0:
   113  007F9A  0009               	tblrd		*+
   114  007F9C  CFF5 FFEE          	movff	tablat,postinc0
   115  007FA0  50E5               	movf	postdec1,w,c
   116  007FA2  50E1               	movf	fsr1l,w,c
   117  007FA4  E1FA               	bnz	copy_data0
   118                           
   119                           ; Clear objects allocated to COMRAM (3 bytes)
   120  007FA6  6A0F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121  007FA8  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122  007FAA  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   123  007FAC                     end_of_initialization:
   124                           	callstack 0
   125  007FAC                     __end_of__initialization:
   126                           	callstack 0
   127  007FAC  0100               	movlb	0
   128  007FAE  EFD9  F03F         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssCOMRAM
   131  00000D                     __pbssCOMRAM:
   132                           	callstack 0
   133  00000D                     _temp_col:
   134                           	callstack 0
   135  00000D                     	ds	1
   136  00000E                     _rowloc:
   137                           	callstack 0
   138  00000E                     	ds	1
   139  00000F                     _col_loc:
   140                           	callstack 0
   141  00000F                     	ds	1
   142                           
   143                           	psect	dataCOMRAM
   144  000001                     __pdataCOMRAM:
   145                           	callstack 0
   146  000001                     _keypad:
   147                           	callstack 0
   148  000001                     	ds	12
   149                           
   150                           	psect	cstackCOMRAM
   151  000012                     __pcstackCOMRAM:
   152                           	callstack 0
   153  000012                     ??_main:
   154                           
   155                           ; 1 bytes @ 0x0
   156  000012                     	ds	1
   157                           
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 33 in file "sensor.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   177 ;;      Params:         0       0       0       0       0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0
   179 ;;      Temps:          1       0       0       0       0       0       0       0       0
   180 ;;      Totals:         1       0       0       0       0       0       0       0       0
   181 ;;Total ram usage:        1 bytes
   182 ;; Hardware stack levels required when called: 1
   183 ;; This function calls:
   184 ;;		_adc_init
   185 ;;		_adc_read
   186 ;; This function is called by:
   187 ;;		Startup code after reset
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text0
   192  007FB2                     __ptext0:
   193                           	callstack 0
   194  007FB2                     _main:
   195                           	callstack 30
   196  007FB2                     
   197                           ;sensor.c: 35:     OSCCON = 0x72;
   198  007FB2  0E72               	movlw	114
   199  007FB4  6ED3               	movwf	211,c	;volatile
   200  007FB6                     
   201                           ;sensor.c: 36:     RBPU=0;
   202  007FB6  9EF1               	bcf	4081,7,c	;volatile
   203  007FB8                     
   204                           ;sensor.c: 37:     TRISB7 = 1;
   205  007FB8  8E93               	bsf	3987,7,c	;volatile
   206  007FBA                     
   207                           ;sensor.c: 38:     TRISB0 = 0;
   208  007FBA  9093               	bcf	3987,0,c	;volatile
   209  007FBC                     
   210                           ;sensor.c: 39:     adc_init();
   211  007FBC  ECB0  F03F         	call	_adc_init	;wreg free
   212  007FC0                     l820:
   213                           
   214                           ;sensor.c: 43:         value_adc = adc_read();
   215  007FC0  ECA6  F03F         	call	_adc_read	;wreg free
   216  007FC4  6E12               	movwf	??_main^0,c
   217  007FC6  5012               	movf	??_main^0,w,c
   218  007FC8  6E10               	movwf	_value_adc^0,c
   219  007FCA  6A11               	clrf	(_value_adc+1)^0,c
   220  007FCC                     
   221                           ;sensor.c: 44:         if (RB7 == 1&& value_adc >25) {
   222  007FCC  AE81               	btfss	3969,7,c	;volatile
   223  007FCE  EFEB  F03F         	goto	u41
   224  007FD2  EFED  F03F         	goto	u40
   225  007FD6                     u41:
   226  007FD6  EFFB  F03F         	goto	l38
   227  007FDA                     u40:
   228  007FDA  5011               	movf	(_value_adc+1)^0,w,c
   229  007FDC  E109               	bnz	u50
   230  007FDE  0E1A               	movlw	26
   231  007FE0  5C10               	subwf	_value_adc^0,w,c
   232  007FE2  A0D8               	btfss	status,0,c
   233  007FE4  EFF6  F03F         	goto	u51
   234  007FE8  EFF8  F03F         	goto	u50
   235  007FEC                     u51:
   236  007FEC  EFFB  F03F         	goto	l38
   237  007FF0                     u50:
   238  007FF0                     
   239                           ;sensor.c: 45:             LATB0 = 1;
   240  007FF0  808A               	bsf	3978,0,c	;volatile
   241                           
   242                           ;sensor.c: 47:         } else {
   243  007FF2  EFE0  F03F         	goto	l820
   244  007FF6                     l38:
   245                           
   246                           ;sensor.c: 48:             LATB0 = 0;
   247  007FF6  908A               	bcf	3978,0,c	;volatile
   248  007FF8  EFE0  F03F         	goto	l820
   249  007FFC  EF00  F000         	goto	start
   250  008000                     __end_of_main:
   251                           	callstack 0
   252                           
   253 ;; *************** function _adc_read *****************
   254 ;; Defined at:
   255 ;;		line 18 in file "adc_lib.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      unsigned char 
   262 ;; Registers used:
   263 ;;		wreg, status,2
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         0       0       0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text1
   283  007F4C                     __ptext1:
   284                           	callstack 0
   285  007F4C                     _adc_read:
   286                           	callstack 30
   287  007F4C                     
   288                           ;adc_lib.c: 19:     ADCON0bits.GO_DONE = 1;
   289  007F4C  82C2               	bsf	194,1,c	;volatile
   290  007F4E                     l103:
   291  007F4E  B2C2               	btfsc	194,1,c	;volatile
   292  007F50  EFAC  F03F         	goto	u11
   293  007F54  EFAE  F03F         	goto	u10
   294  007F58                     u11:
   295  007F58  EFA7  F03F         	goto	l103
   296  007F5C                     u10:
   297  007F5C                     
   298                           ;adc_lib.c: 21:     return ADRESH;
   299  007F5C  50C4               	movf	196,w,c	;volatile
   300  007F5E  0012               	return		;funcret
   301  007F60                     __end_of_adc_read:
   302                           	callstack 0
   303                           
   304 ;; *************** function _adc_init *****************
   305 ;; Defined at:
   306 ;;		line 6 in file "adc_lib.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         0       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text2
   334  007F60                     __ptext2:
   335                           	callstack 0
   336  007F60                     _adc_init:
   337                           	callstack 30
   338  007F60                     
   339                           ;adc_lib.c: 7:     ADCON1bits.PCFG = 0b1110;
   340  007F60  50C1               	movf	193,w,c	;volatile
   341  007F62  0BF0               	andlw	-16
   342  007F64  090E               	iorlw	14
   343  007F66  6EC1               	movwf	193,c	;volatile
   344                           
   345                           ;adc_lib.c: 8:     ADCON1bits.VCFG = 0b00;
   346  007F68  0ECF               	movlw	-49
   347  007F6A  16C1               	andwf	193,f,c	;volatile
   348                           
   349                           ;adc_lib.c: 9:     ADCON0bits.CHS = 0b0000;
   350  007F6C  0EC3               	movlw	-61
   351  007F6E  16C2               	andwf	194,f,c	;volatile
   352                           
   353                           ;adc_lib.c: 10:     ADCON2bits.ACQT = 0b010;
   354  007F70  50C0               	movf	192,w,c	;volatile
   355  007F72  0BC7               	andlw	-57
   356  007F74  0910               	iorlw	16
   357  007F76  6EC0               	movwf	192,c	;volatile
   358                           
   359                           ;adc_lib.c: 11:     ADCON2bits.ADCS = 0b001;
   360  007F78  50C0               	movf	192,w,c	;volatile
   361  007F7A  0BF8               	andlw	-8
   362  007F7C  0901               	iorlw	1
   363  007F7E  6EC0               	movwf	192,c	;volatile
   364  007F80                     
   365                           ;adc_lib.c: 12:     ADCON2bits.ADFM = 0;
   366  007F80  9EC0               	bcf	192,7,c	;volatile
   367  007F82                     
   368                           ;adc_lib.c: 13:     ADCON0bits.ADON = 1;
   369  007F82  80C2               	bsf	194,0,c	;volatile
   370  007F84  0012               	return		;funcret
   371  007F86                     __end_of_adc_init:
   372                           	callstack 0
   373  0000                     
   374                           	psect	rparam
   375  0000                     
   376                           	psect	idloc
   377                           
   378                           ;Config register IDLOC0 @ 0x200000
   379                           ;	unspecified, using default values
   380  200000                     	org	2097152
   381  200000  FF                 	db	255
   382                           
   383                           ;Config register IDLOC1 @ 0x200001
   384                           ;	unspecified, using default values
   385  200001                     	org	2097153
   386  200001  FF                 	db	255
   387                           
   388                           ;Config register IDLOC2 @ 0x200002
   389                           ;	unspecified, using default values
   390  200002                     	org	2097154
   391  200002  FF                 	db	255
   392                           
   393                           ;Config register IDLOC3 @ 0x200003
   394                           ;	unspecified, using default values
   395  200003                     	org	2097155
   396  200003  FF                 	db	255
   397                           
   398                           ;Config register IDLOC4 @ 0x200004
   399                           ;	unspecified, using default values
   400  200004                     	org	2097156
   401  200004  FF                 	db	255
   402                           
   403                           ;Config register IDLOC5 @ 0x200005
   404                           ;	unspecified, using default values
   405  200005                     	org	2097157
   406  200005  FF                 	db	255
   407                           
   408                           ;Config register IDLOC6 @ 0x200006
   409                           ;	unspecified, using default values
   410  200006                     	org	2097158
   411  200006  FF                 	db	255
   412                           
   413                           ;Config register IDLOC7 @ 0x200007
   414                           ;	unspecified, using default values
   415  200007                     	org	2097159
   416  200007  FF                 	db	255
   417                           
   418                           	psect	config
   419                           
   420                           ;Config register CONFIG1L @ 0x300000
   421                           ;	PLL Prescaler Selection bits
   422                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   423                           ;	System Clock Postscaler Selection bits
   424                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   425                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   426                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   427  300000                     	org	3145728
   428  300000  00                 	db	0
   429                           
   430                           ;Config register CONFIG1H @ 0x300001
   431                           ;	Oscillator Selection bits
   432                           ;	FOSC = EC_EC, EC oscillator, CLKO function on RA6 (EC)
   433                           ;	Fail-Safe Clock Monitor Enable bit
   434                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   435                           ;	Internal/External Oscillator Switchover bit
   436                           ;	IESO = OFF, Oscillator Switchover mode disabled
   437  300001                     	org	3145729
   438  300001  05                 	db	5
   439                           
   440                           ;Config register CONFIG2L @ 0x300002
   441                           ;	Power-up Timer Enable bit
   442                           ;	PWRT = OFF, PWRT disabled
   443                           ;	Brown-out Reset Enable bits
   444                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   445                           ;	Brown-out Reset Voltage bits
   446                           ;	BORV = 2, Setting 1 2.79V
   447                           ;	USB Voltage Regulator Enable bit
   448                           ;	VREGEN = OFF, USB voltage regulator disabled
   449  300002                     	org	3145730
   450  300002  17                 	db	23
   451                           
   452                           ;Config register CONFIG2H @ 0x300003
   453                           ;	Watchdog Timer Enable bit
   454                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   455                           ;	Watchdog Timer Postscale Select bits
   456                           ;	WDTPS = 32768, 1:32768
   457  300003                     	org	3145731
   458  300003  1E                 	db	30
   459                           
   460                           ; Padding undefined space
   461  300004                     	org	3145732
   462  300004  FF                 	db	255
   463                           
   464                           ;Config register CONFIG3H @ 0x300005
   465                           ;	CCP2 MUX bit
   466                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   467                           ;	PORTB A/D Enable bit
   468                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   469                           ;	Low-Power Timer 1 Oscillator Enable bit
   470                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   471                           ;	MCLR Pin Enable bit
   472                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   473  300005                     	org	3145733
   474  300005  83                 	db	131
   475                           
   476                           ;Config register CONFIG4L @ 0x300006
   477                           ;	Stack Full/Underflow Reset Enable bit
   478                           ;	STVREN = ON, Stack full/underflow will cause Reset
   479                           ;	Single-Supply ICSP Enable bit
   480                           ;	LVP = ON, Single-Supply ICSP enabled
   481                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   482                           ;	ICPRT = OFF, ICPORT disabled
   483                           ;	Extended Instruction Set Enable bit
   484                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   485                           ;	Background Debugger Enable bit
   486                           ;	DEBUG = 0x1, unprogrammed default
   487  300006                     	org	3145734
   488  300006  85                 	db	133
   489                           
   490                           ; Padding undefined space
   491  300007                     	org	3145735
   492  300007  FF                 	db	255
   493                           
   494                           ;Config register CONFIG5L @ 0x300008
   495                           ;	Code Protection bit
   496                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   497                           ;	Code Protection bit
   498                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   499                           ;	Code Protection bit
   500                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   501                           ;	Code Protection bit
   502                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   503  300008                     	org	3145736
   504  300008  0F                 	db	15
   505                           
   506                           ;Config register CONFIG5H @ 0x300009
   507                           ;	Boot Block Code Protection bit
   508                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   509                           ;	Data EEPROM Code Protection bit
   510                           ;	CPD = OFF, Data EEPROM is not code-protected
   511  300009                     	org	3145737
   512  300009  C0                 	db	192
   513                           
   514                           ;Config register CONFIG6L @ 0x30000A
   515                           ;	Write Protection bit
   516                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   517                           ;	Write Protection bit
   518                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   519                           ;	Write Protection bit
   520                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   521                           ;	Write Protection bit
   522                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   523  30000A                     	org	3145738
   524  30000A  0F                 	db	15
   525                           
   526                           ;Config register CONFIG6H @ 0x30000B
   527                           ;	Configuration Register Write Protection bit
   528                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   529                           ;	Boot Block Write Protection bit
   530                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   531                           ;	Data EEPROM Write Protection bit
   532                           ;	WRTD = OFF, Data EEPROM is not write-protected
   533  30000B                     	org	3145739
   534  30000B  E0                 	db	224
   535                           
   536                           ;Config register CONFIG7L @ 0x30000C
   537                           ;	Table Read Protection bit
   538                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   539                           ;	Table Read Protection bit
   540                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   541                           ;	Table Read Protection bit
   542                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   543                           ;	Table Read Protection bit
   544                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   545  30000C                     	org	3145740
   546  30000C  0F                 	db	15
   547                           
   548                           ;Config register CONFIG7H @ 0x30000D
   549                           ;	Boot Block Table Read Protection bit
   550                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   551  30000D                     	org	3145741
   552  30000D  40                 	db	64
   553                           tosu	equ	0xFFF
   554                           tosh	equ	0xFFE
   555                           tosl	equ	0xFFD
   556                           stkptr	equ	0xFFC
   557                           pclatu	equ	0xFFB
   558                           pclath	equ	0xFFA
   559                           pcl	equ	0xFF9
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           prodh	equ	0xFF4
   565                           prodl	equ	0xFF3
   566                           indf0	equ	0xFEF
   567                           postinc0	equ	0xFEE
   568                           postdec0	equ	0xFED
   569                           preinc0	equ	0xFEC
   570                           plusw0	equ	0xFEB
   571                           fsr0h	equ	0xFEA
   572                           fsr0l	equ	0xFE9
   573                           wreg	equ	0xFE8
   574                           indf1	equ	0xFE7
   575                           postinc1	equ	0xFE6
   576                           postdec1	equ	0xFE5
   577                           preinc1	equ	0xFE4
   578                           plusw1	equ	0xFE3
   579                           fsr1h	equ	0xFE2
   580                           fsr1l	equ	0xFE1
   581                           bsr	equ	0xFE0
   582                           indf2	equ	0xFDF
   583                           postinc2	equ	0xFDE
   584                           postdec2	equ	0xFDD
   585                           preinc2	equ	0xFDC
   586                           plusw2	equ	0xFDB
   587                           fsr2h	equ	0xFDA
   588                           fsr2l	equ	0xFD9
   589                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         3
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                           _adc_init
                           _adc_read
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      1      12       1       18.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      20        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Oct 10 22:56:52 2021

                     l38 7FF6                       u10 7F5C                       u11 7F58  
                     u40 7FDA                       u41 7FD6                       u50 7FF0  
                     u51 7FEC                      l100 7F84                      l103 7F4E  
                    l106 7F5E                      l810 7FB2                      l820 7FC0  
                    l812 7FB6                      l822 7FCC                      l814 7FB8  
                    l824 7FDA                      l816 7FBA                      l826 7FF0  
                    l818 7FBC                      l782 7F60                      l790 7F5C  
                    l784 7F80                      l786 7F82                      l788 7F4C  
                    _RB7 007C0F                     _LATC 000F8B                     _RBPU 007F8F  
                   _main 7FB2                     fsr1l 000FE1                     start 0000  
           ___param_bank 000000                    ?_main 0012                    _LATB0 007C50  
                  _PORTC 000F82                    _TRISC 000F94                    tablat 000FF5  
                  status 000FD8          __initialization 7F86             __end_of_main 8000  
                 ??_main 0012            __activetblptr 000000                   _ADRESH 000FC4  
       __end_of_adc_init 7F86         __end_of_adc_read 7F60                   _OSCCON 000FD3  
                 _TRISB0 007C98                   _TRISB7 007C9F                   _keypad 0001  
                 isa$std 000001                   _rowloc 000E             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7FAC            ___rparam_used 000001  
         __pcstackCOMRAM 0012               __pnvCOMRAM 0010                ?_adc_init 0012  
              ?_adc_read 0012                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F86                  __ramtop 0800               ??_adc_init 0012  
             ??_adc_read 0012                  __ptext0 7FB2                  __ptext1 7F4C  
                __ptext2 7F60                  _col_loc 000F     end_of_initialization 7FAC  
                postdec1 000FE5                  postinc0 000FEE            __pidataCOMRAM 7F40  
    start_initialization 7F86        __size_of_adc_init 0026        __size_of_adc_read 0014  
            __pbssCOMRAM 000D                _value_adc 0010               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                copy_data0 7F9A  
               __Hrparam 0000                 __Lrparam 0000                 _adc_init 7F60  
               _adc_read 7F4C            __size_of_main 004E                 _temp_col 000D  
               isa$xinst 000000  
